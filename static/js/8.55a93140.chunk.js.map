{"version":3,"sources":["redux/actions/cartActions.js","components/loadingScreen/LoadingScreen.js","components/modal/Modal.js","views/productViewPage/ProductViewPage.js"],"names":["createCart","cart","carts","JSON","parse","localStorage","getItem","setItem","stringify","type","types","CREATE_CART","addItem","newCarts","map","c","email","products","ADD_ITEM","incrementItem","id","updateProduct","p","productId","productName","productPrice","number","INCREMENT_ITEM","decrementItem","DECREMENT_ITEM","removeItem","filter","REMOVE_ITEM","emptyCart","EMPTY_CART","LoadingScreen","className","style","color","width","height","Modal","children","title","modalButtonComponent","useState","showModal","setShowModal","handleCloseModal","Fragment","onClick","mapStateToProps","createStructuredSelector","userProducts","user","connect","addToFavorites","removeFromFavorites","props","useParams","location","useLocation","name","imageSrc","regularPrice","price","totalSales","points","stock","relatedIds","product","setProduct","loading","setLoading","relatedProducts","setRelatedProdutcs","image","setImage","history","useHistory","token","useSelector","state","currentProduct","find","isFavorite","favorites","f","ModalButtonComponent","ModalContent","href","pathname","target","rel","useEffect","api","get","then","ID","data","array","related_ids","images","src","description","regular_price","total_sales","average_rating","stockQuantity","stock_quantity","include","response","document","documentElement","scrollTo","Container","Row","Col","xs","lg","alt","productsSliderSettings","Spinner","img","key","onMouseUp","dangerouslySetInnerHTML","__html","push","SubmitButton","CART","relatedProductsSliderSetting","length","Card"],"mappings":"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","file":"static/js/8.55a93140.chunk.js","sourcesContent":["import types from '../types/cartTypes'\r\n\r\nexport const createCart = cart => {\r\n  const carts = JSON.parse(localStorage.getItem(\"carts\"))\r\n  localStorage.setItem(\"carts\", JSON.stringify([...carts, cart]))\r\n  return {\r\n    type: types.CREATE_CART,\r\n    cart\r\n  }\r\n}\r\n\r\nexport const addItem = cart => {\r\n  const carts = JSON.parse(localStorage.getItem(\"carts\"))\r\n  const newCarts = carts.map(c => (\r\n    c.email === cart.email ?\r\n      {\r\n        email: cart.email,\r\n        products: [...c.products, cart.products[0]]\r\n      } : c\r\n  ))\r\n  localStorage.setItem(\"carts\", JSON.stringify(newCarts))\r\n\r\n  return {\r\n    type: types.ADD_ITEM,\r\n    cart\r\n  }\r\n}\r\n\r\nexport const incrementItem = (email, id) => {\r\n  const updateProduct = p => {\r\n    return p.productId === id ?\r\n      {\r\n        productId: p.productId,\r\n        productName: p.productName,\r\n        productPrice: p.productPrice,\r\n        number: p.number + 1\r\n      } : p\r\n  }\r\n\r\n  const carts = JSON.parse(localStorage.getItem(\"carts\"))\r\n  const newCarts = carts.map(c => {\r\n    return c.email === email ?\r\n      {\r\n        email: email,\r\n        products: c.products.map(updateProduct)\r\n      } : c\r\n  })\r\n  localStorage.setItem(\"carts\", JSON.stringify(newCarts))\r\n\r\n  return {\r\n    type: types.INCREMENT_ITEM,\r\n    email,\r\n    id\r\n  }\r\n}\r\n\r\nexport const decrementItem = (email, id) => {\r\n  const updateProduct = p => {\r\n    return p.productId === id ?\r\n      {\r\n        productId: p.productId,\r\n        productName: p.productName,\r\n        productPrice: p.productPrice,\r\n        number: p.number - 1\r\n      } : p\r\n  }\r\n\r\n  const carts = JSON.parse(localStorage.getItem(\"carts\"))\r\n  const newCarts = carts.map(c => {\r\n    return c.email === email ?\r\n      {\r\n        email: email,\r\n        products: c.products.map(updateProduct)\r\n      } : c\r\n  })\r\n  localStorage.setItem(\"carts\", JSON.stringify(newCarts))\r\n\r\n  return {\r\n    type: types.DECREMENT_ITEM,\r\n    email,\r\n    id\r\n  }\r\n}\r\n\r\nexport const removeItem = (email, id) => {\r\n  const carts = JSON.parse(localStorage.getItem(\"carts\"))\r\n  const newCarts = carts.map(c => {\r\n    return c.email === email ?\r\n      {\r\n        email: email,\r\n        products: c.products.filter(p => p.productId !== id)\r\n      }\r\n      :\r\n      c\r\n  })\r\n  localStorage.setItem(\"carts\", JSON.stringify(newCarts))\r\n\r\n  return {\r\n    type: types.REMOVE_ITEM,\r\n    email,\r\n    id\r\n  }\r\n}\r\n\r\nexport const emptyCart = email => {\r\n  const carts = JSON.parse(localStorage.getItem(\"carts\"))\r\n  const newCarts = carts.map(c => {\r\n    return c.email === email ?\r\n      {\r\n        ...c,\r\n        products: []\r\n      } : c\r\n  })\r\n  localStorage.setItem(\"carts\", JSON.stringify(newCarts))\r\n\r\n  return {\r\n    type: types.EMPTY_CART,\r\n    email\r\n  }\r\n}","import React from \"react\"\r\nimport \"./LoadingScreen.scss\"\r\nimport { Spinner } from \"reactstrap\"\r\n\r\nconst LoadingScreen = () => {\r\n  return (\r\n    <div className=\"loading-screen\">\r\n      <Spinner style={{ color: \"green\", width: \"50px\", height: \"50px\" }} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoadingScreen","import React, { useState } from \"react\"\r\nimport \"./Modal.scss\"\r\n\r\nconst Modal = ({ children, title, modalButtonComponent }) => {\r\n  const [showModal, setShowModal] = useState(false)\r\n\r\n  const handleCloseModal = () => {\r\n    setShowModal(false)\r\n  }\r\n  const handleShowModal = () => {\r\n    setShowModal(true)\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div onClick={handleShowModal}>\r\n        {modalButtonComponent}\r\n      </div>\r\n      {\r\n        showModal ?\r\n          <div className=\"my-modal\">\r\n            <div className=\"modal-bg\" onClick={handleCloseModal}></div>\r\n            <div className=\"modal-wrapper\">\r\n              <div className=\"modal-contents\">\r\n                <div className=\"modal-head\">\r\n                  <span className=\"modal-title\">{title}</span>\r\n                  <button onClick={handleCloseModal}>&times;</button>\r\n                </div>\r\n                <div className=\"modal-main\">\r\n                  {\r\n                    children\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          :\r\n          null\r\n      }\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Modal","import React, { useState, useEffect } from \"react\"\r\nimport \"./ProductViewPage.scss\"\r\nimport SubmitButton from \"../../components/buttons/submitButton/SubmitButton\"\r\nimport { Container, Row, Col } from \"reactstrap\"\r\nimport Modal from \"../../components/modal/Modal\"\r\nimport { useParams, useLocation } from \"react-router-dom\"\r\nimport api from \"../../api/wooCommerce\"\r\nimport Slider from \"react-slick\"\r\nimport { relatedProductsSliderSetting, productsSliderSettings } from \"../../constants/sliderConfig\"\r\nimport Card from \"../../components/card/Card\"\r\nimport { Spinner } from \"reactstrap\"\r\nimport { FaStar, FaShare, FaTrash } from \"react-icons/fa\"\r\nimport { HiOutlineHeart, HiHeart } from \"react-icons/hi\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { connect, useSelector } from \"react-redux\"\r\nimport { addItem, incrementItem, decrementItem, removeItem } from \"../../redux/actions/cartActions\"\r\nimport { userProducts } from \"../../redux/selectors/cartSelector\"\r\nimport { user } from \"../../redux/selectors/userSelectors\"\r\nimport { createStructuredSelector } from \"reselect\"\r\nimport LoadingScreen from \"../../components/loadingScreen/LoadingScreen\"\r\nimport { addToFavorites, removeFromFavorites } from \"../../redux/actions/userActions\"\r\n\r\nconst ProductViewPage = props => {\r\n  const {\r\n    userProducts,\r\n    user,\r\n    addItem,\r\n    incrementItem,\r\n    decrementItem,\r\n    removeItem,\r\n    addToFavorites,\r\n    removeFromFavorites\r\n  } = props\r\n  const { id } = useParams()\r\n  const location = useLocation()\r\n  const [product, setProduct] = useState({\r\n    name: \"\",\r\n    imageSrc: [],\r\n    regularPrice: \"\",\r\n    price: \"\",\r\n    totalSales: 0,\r\n    points: \"\",\r\n    stock: \"\",\r\n    relatedIds: []\r\n  })\r\n  const [loading, setLoading] = useState(false)\r\n  const [relatedProducts, setRelatedProdutcs] = useState([])\r\n  const [image, setImage] = useState(\"\")\r\n  const history = useHistory()\r\n  const token = useSelector(state => state.user.token)\r\n  const currentProduct = userProducts.find(product => product.productId === id)\r\n  const number = currentProduct ? currentProduct.number : 0\r\n  let isFavorite = false\r\n  if (user.favorites) {\r\n    isFavorite = !!user.favorites.find(f => f === id)\r\n  }\r\n\r\n  const handleAddToCart = () => {\r\n    if (!token)\r\n      return history.push(\"/account/signin\")\r\n\r\n    const CART = {\r\n      email: token,\r\n      products: [{\r\n        productId: id,\r\n        productName: product.name,\r\n        productPrice: product.price,\r\n        number: 1\r\n      }]\r\n    }\r\n\r\n    addItem(CART)\r\n  }\r\n  const handleChangeImage = src => {\r\n    setImage(src)\r\n  }\r\n  const handlePlus = () => {\r\n    if (!token)\r\n      return history.push(\"/account/signin\")\r\n\r\n    incrementItem(token, id)\r\n  }\r\n  const handleMinus = () => {\r\n    if (!token)\r\n      return history.push(\"/account/signin\")\r\n\r\n    decrementItem(token, id)\r\n  }\r\n  const handleRemove = () => {\r\n    if (!token)\r\n      return history.push(\"/account/signin\")\r\n\r\n    removeItem(token, id)\r\n  }\r\n  const handleAddFavorite = () => {\r\n    if (!token)\r\n      return history.push(\"/account/signin\")\r\n\r\n    addToFavorites(token, id)\r\n  }\r\n  const handleRemoveFavorite = () => {\r\n    if (!token)\r\n      return history.push(\"/account/signin\")\r\n\r\n    removeFromFavorites(token, id)\r\n  }\r\n\r\n  const ModalButtonComponent = () => {\r\n    return (\r\n      < div className=\"share-product\" >\r\n        <span><FaShare color=\"blue\" /> این محصول را به اشتراک بگذارید</span>\r\n      </div >\r\n    )\r\n  }\r\n  const ModalContent = () => (\r\n    <React.Fragment>\r\n      <p>با استفاده از روش‌های زیر می‌توانید این صفحه را با دوستان خود به اشتراک بگذارید.</p>\r\n      <div className=\"share-buttons\">\r\n        <a\r\n          href={`https://telegram.me/share/url?url=http://localhost${location.pathname}`}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <button className=\"telegram-button\">Telegram</button>\r\n        </a>\r\n        <a\r\n          href={`https://api.whatsapp.com/send?text=http://localhost${location.pathname}`}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <button className=\"whatsapp-button\">WhatsApp</button>\r\n        </a>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    api.get(`products/${id}`)\r\n      .then(product => {\r\n        const ID = product.data.id\r\n        const array = product.data.related_ids\r\n        setImage(product.data.images[0].src)\r\n        setProduct({\r\n          name: product.data.name,\r\n          description: product.data.description,\r\n          imageSrc: product.data.images,\r\n          regularPrice: product.data.regular_price,\r\n          price: product.data.price,\r\n          totalSales: product.data.total_sales,\r\n          points: product.data.average_rating,\r\n          stockQuantity: product.data.stock_quantity,\r\n          relatedIds: product.data.related_ids\r\n        })\r\n        api.get(\"products\", {\r\n          include: array.filter(id => id !== ID)\r\n        })\r\n          .then(response => {\r\n            setRelatedProdutcs([...response.data])\r\n            setLoading(false)\r\n            document.documentElement.scrollTo(0, 0)\r\n          })\r\n      })\r\n  }, [id])\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container>\r\n        {\r\n          loading && <LoadingScreen />\r\n        }\r\n        <Row className=\"product-view px-3\">\r\n          <Col xs={12} lg={6} className=\"mb-4 mb-lg-0\">\r\n            {\r\n              product.imageSrc ?\r\n                <div>\r\n                  <img src={image} alt=\"\" />\r\n                  <Slider {...productsSliderSettings}>\r\n                    {\r\n                      !loading ? \r\n                        product.imageSrc.map(img => (\r\n                          <div\r\n                            key={img}\r\n                            onMouseUp={() => handleChangeImage(img.src)}\r\n                            className=\"image-nav\"                    \r\n                          >\r\n                            <img src={img.src} alt=\"\" />\r\n                          </div>                        \r\n                        ))\r\n                        :\r\n                        <div className=\"spinner\"><Spinner /></div>\r\n                    }\r\n                  </Slider>\r\n                </div>\r\n                :\r\n                <div className=\"spinner\"><Spinner /></div>\r\n            }\r\n          </Col>\r\n          <Col xs={12} lg={6} className=\"add-to-cart-field py-3\">\r\n            <h4>{product.name}</h4>\r\n            <p><FaStar color=\"gold\" /> امتیاز: <span>{product.points}</span></p>\r\n            <p>کل فروش: <span>{product.totalSales}</span></p>\r\n            <p>موجودی: <span>{product.stockQuantity || 0}</span></p>\r\n            <h5>توضیحات:</h5>\r\n            <span dangerouslySetInnerHTML={{ __html: product.description }}></span>\r\n            {\r\n              isFavorite ?\r\n                <div className=\"add-to-favorites\" onClick={handleRemoveFavorite}>\r\n                  <span>\r\n                    <HiHeart color=\"red\" />\r\n                    حذف کردن از علاقه مندی ها\r\n                  </span>\r\n                </div>\r\n                :\r\n                <div className=\"add-to-favorites\" onClick={handleAddFavorite}>\r\n                  <span>\r\n                    <HiOutlineHeart color=\"red\" />\r\n                    اضافه کردن به علاقه مندی ها\r\n                  </span>\r\n                </div>\r\n            }\r\n            <Modal\r\n              title=\"اشتراک گذاری\"\r\n              modalButtonComponent={<ModalButtonComponent />}\r\n            >\r\n              <ModalContent />\r\n            </Modal>\r\n            <div className=\"price-field\">\r\n              <span>قیمت مصرف کننده:</span>\r\n              <span className=\"regular-price\">{`${product.regularPrice} تومان`}</span>\r\n              <span className=\"price\">{`${product.price} تومان`}</span>\r\n            </div>\r\n            {\r\n              number === 0 &&\r\n              <SubmitButton\r\n                onClick={handleAddToCart}\r\n              >\r\n                افزودن به سبد خرید\r\n              </SubmitButton>\r\n            }\r\n            {\r\n              number > 0 &&\r\n              <div className=\"edit-number\">\r\n                <button className=\"plus\" onClick={handlePlus}>+</button>\r\n                <span className=\"number\">{number}</span>\r\n                {\r\n                  number > 1 &&\r\n                  <button className=\"minus\" onClick={handleMinus}>-</button>\r\n                }\r\n                {\r\n                  number === 1 &&\r\n                  <button className=\"minus\" onClick={handleRemove}><FaTrash /></button>\r\n                }\r\n              </div>\r\n            }\r\n          </Col>\r\n        </Row>\r\n        <div className=\"related-products\">\r\n          <h2>محصولات مرتبط</h2>\r\n          <Slider {...relatedProductsSliderSetting}>\r\n            {\r\n              relatedProducts.length !== 0 ?\r\n                relatedProducts.map(product => (\r\n                  <Card\r\n                    key={product.id}\r\n                    title={product.name}\r\n                    imageSrc={product.images[0].src}\r\n                    regularPrice={product.regular_price}\r\n                    price={product.price}\r\n                    id={product.id}\r\n                  />\r\n                ))\r\n                :\r\n                <div className=\"spinner\"><Spinner /></div>\r\n            }\r\n          </Slider>\r\n        </div>\r\n      </Container>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  userProducts,\r\n  user\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n  addItem,\r\n  incrementItem,\r\n  decrementItem,\r\n  removeItem,\r\n  addToFavorites,\r\n  removeFromFavorites\r\n})(ProductViewPage)"],"sourceRoot":""}