{"version":3,"sources":["redux/actions/cartActions.js","views/cartPage/CartPage.js"],"names":["createCart","cart","carts","JSON","parse","localStorage","getItem","setItem","stringify","type","types","CREATE_CART","addItem","newCarts","map","c","email","products","ADD_ITEM","incrementItem","id","updateProduct","p","productId","productName","productPrice","number","INCREMENT_ITEM","decrementItem","DECREMENT_ITEM","removeItem","filter","REMOVE_ITEM","emptyCart","EMPTY_CART","mapStateToProps","createStructuredSelector","userProducts","connect","props","history","useHistory","token","useSelector","state","user","className","onClick","goBack","length","style","color","product","key","Number","to"],"mappings":"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","file":"static/js/12.f8dc6e0f.chunk.js","sourcesContent":["import types from '../types/cartTypes'\r\n\r\nexport const createCart = cart => {\r\n  const carts = JSON.parse(localStorage.getItem(\"carts\"))\r\n  localStorage.setItem(\"carts\", JSON.stringify([...carts, cart]))\r\n  return {\r\n    type: types.CREATE_CART,\r\n    cart\r\n  }\r\n}\r\n\r\nexport const addItem = cart => {\r\n  const carts = JSON.parse(localStorage.getItem(\"carts\"))\r\n  const newCarts = carts.map(c => (\r\n    c.email === cart.email ?\r\n      {\r\n        email: cart.email,\r\n        products: [...c.products, cart.products[0]]\r\n      } : c\r\n  ))\r\n  localStorage.setItem(\"carts\", JSON.stringify(newCarts))\r\n\r\n  return {\r\n    type: types.ADD_ITEM,\r\n    cart\r\n  }\r\n}\r\n\r\nexport const incrementItem = (email, id) => {\r\n  const updateProduct = p => {\r\n    return p.productId === id ?\r\n      {\r\n        productId: p.productId,\r\n        productName: p.productName,\r\n        productPrice: p.productPrice,\r\n        number: p.number + 1\r\n      } : p\r\n  }\r\n\r\n  const carts = JSON.parse(localStorage.getItem(\"carts\"))\r\n  const newCarts = carts.map(c => {\r\n    return c.email === email ?\r\n      {\r\n        email: email,\r\n        products: c.products.map(updateProduct)\r\n      } : c\r\n  })\r\n  localStorage.setItem(\"carts\", JSON.stringify(newCarts))\r\n\r\n  return {\r\n    type: types.INCREMENT_ITEM,\r\n    email,\r\n    id\r\n  }\r\n}\r\n\r\nexport const decrementItem = (email, id) => {\r\n  const updateProduct = p => {\r\n    return p.productId === id ?\r\n      {\r\n        productId: p.productId,\r\n        productName: p.productName,\r\n        productPrice: p.productPrice,\r\n        number: p.number - 1\r\n      } : p\r\n  }\r\n\r\n  const carts = JSON.parse(localStorage.getItem(\"carts\"))\r\n  const newCarts = carts.map(c => {\r\n    return c.email === email ?\r\n      {\r\n        email: email,\r\n        products: c.products.map(updateProduct)\r\n      } : c\r\n  })\r\n  localStorage.setItem(\"carts\", JSON.stringify(newCarts))\r\n\r\n  return {\r\n    type: types.DECREMENT_ITEM,\r\n    email,\r\n    id\r\n  }\r\n}\r\n\r\nexport const removeItem = (email, id) => {\r\n  const carts = JSON.parse(localStorage.getItem(\"carts\"))\r\n  const newCarts = carts.map(c => {\r\n    return c.email === email ?\r\n      {\r\n        email: email,\r\n        products: c.products.filter(p => p.productId !== id)\r\n      }\r\n      :\r\n      c\r\n  })\r\n  localStorage.setItem(\"carts\", JSON.stringify(newCarts))\r\n\r\n  return {\r\n    type: types.REMOVE_ITEM,\r\n    email,\r\n    id\r\n  }\r\n}\r\n\r\nexport const emptyCart = email => {\r\n  const carts = JSON.parse(localStorage.getItem(\"carts\"))\r\n  const newCarts = carts.map(c => {\r\n    return c.email === email ?\r\n      {\r\n        ...c,\r\n        products: []\r\n      } : c\r\n  })\r\n  localStorage.setItem(\"carts\", JSON.stringify(newCarts))\r\n\r\n  return {\r\n    type: types.EMPTY_CART,\r\n    email\r\n  }\r\n}","import React from \"react\"\r\nimport \"./CartPage.scss\"\r\nimport SubmitButton from \"../../components/buttons/submitButton/SubmitButton\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { Container } from \"reactstrap\"\r\nimport { FaTrash, FaPlus, FaMinus } from \"react-icons/fa\"\r\nimport { connect, useSelector } from \"react-redux\"\r\nimport { userProducts } from \"../../redux/selectors/cartSelector\"\r\nimport { createStructuredSelector } from \"reselect\"\r\nimport { removeItem, incrementItem, decrementItem } from \"../../redux/actions/cartActions\"\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\nconst CartPage = props => {\r\n  const history = useHistory()\r\n  const token = useSelector(state => state.user.token)\r\n  const { userProducts, removeItem, incrementItem, decrementItem } = props\r\n\r\n  return (\r\n    <div className=\"cart-page\">\r\n      <div className=\"return-button\">\r\n        <SubmitButton onClick={() => history.goBack()}>\r\n          بازگشت به صفحه قبل\r\n        </SubmitButton>\r\n      </div>\r\n      {\r\n        userProducts.length === 0 ? \r\n          <h1>سبد کالا خالی است <span style={{ color: \"red\" }}>:(</span></h1>\r\n          :\r\n          <Container>\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>نام محصول</th>\r\n                  <th>تعداد</th>\r\n                  <th>قیمت</th>\r\n                  <th>اعمال تغییر</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {\r\n                  userProducts.map(product => (\r\n                    <tr key={product.productId}>\r\n                      <td>{product.productName}</td>\r\n                      <td>{product.number}</td>\r\n                      <td>{Number(product.productPrice) * product.number} تومان</td>\r\n                      <td>\r\n                        <button\r\n                          className=\"add\"\r\n                          onClick={() => incrementItem(token, product.productId)}\r\n                        >\r\n                          <FaPlus />\r\n                        </button>\r\n                        {\r\n                          product.number !== 1 ?\r\n                            <button\r\n                              className=\"remove\"\r\n                              onClick={() => decrementItem(token, product.productId)}\r\n                            >\r\n                              <FaMinus />\r\n                            </button>\r\n                            :\r\n                            <button\r\n                              className=\"remove\"\r\n                              onClick={() => removeItem(token, product.productId)}\r\n                            >\r\n                              <FaTrash />\r\n                            </button>\r\n                        }\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                }\r\n              </tbody>\r\n            </table>\r\n            <div className=\"submit\">\r\n              <NavLink to=\"/checkout\">\r\n                <SubmitButton>نهایی کردن سفارش</SubmitButton>\r\n              </NavLink>\r\n            </div>\r\n          </Container>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  userProducts\r\n})\r\n\r\nexport default connect(mapStateToProps, { removeItem, incrementItem, decrementItem })(CartPage)"],"sourceRoot":""}